#!/bin/bash

#
# Testing of dd_rhelp binary
#

#!- Library include
. /etc/shlib
#!- 

include pretty
include common
include shunit

depends sed grep cat cut tr head touch wc bc dd


tmp=/tmp

export PATH=".:$PATH"

gnu_standards

#
# Checking bad arguments
#

Section Bad Arguments

# were tested by commenting print_error, print_usage
assert "$tprog with 1 empty arg fails (usage)" ! ./$tprog \'\' 			\&\& ./$tprog \'\'			"2>&1" \| "$grep" "^usage:"
assert "$tprog with 2 empty arg fails (error)" ! ./$tprog \'\' \'\' 		\&\& ./$tprog \'\' \'\' 		"2>&1" \| "$grep" "error"
assert "$tprog with 3 empty arg fails (error)" ! ./$tprog \'\' \'\' \'\' 	\&\& ./$tprog \'\' \'\' \'\'	"2>&1" \| "$grep" "error"


temp1="$tmp/${tprog}_test.$$.a.tmp"
temp2="$tmp/${tprog}_test.$$.b.tmp"

Elt "Setting up (creating $temp2)"

tempdir="$tmp/${tprog}_test.$$.dir"

[ -e "$temp1" ] && rm "$temp1"

"$dd" if="/dev/zero" of="$temp2" count=1 bs=1k >/dev/null 2>&1
Feedback

# were tested by commenting print_error
assert "$tprog arg1 is not specified, but arg2 is, generates 'error:'." 	! ./$tprog \"\" "$temp2" 		\&\& ./$tprog \"\" "$temp2" 		"2>&1" \| "$grep" -i "error"
assert "$tprog arg1 is not existant, but arg2 is, generates 'error:'." 		! ./$tprog "$temp1" "$temp2" 	\&\& ./$tprog "$temp1" "$temp2" 	"2>&1" \| "$grep" -i "error"
assert "$tprog arg1 does exists, but arg2 doesn't, generates 'error:'." 	! ./$tprog "$temp2" \"\" 		\&\& ./$tprog "$temp2" \"\" 		"2>&1" \| "$grep" -i "error"

#
# Finds dd_rescue ?
#

Section dd_rescue finding

Elt Creating $tempdir
mkdir -p "$tempdir" && 
cp $tprog $tempdir && 
cd $tempdir 
# && PATH_OLD=$PATH && PATH="" && export PATH
Feedback

echo WARNING : if dd_rescue is in PATH these tests won\'t be accurate...


# were tested by changing 'not found' to 'not found'

if assert "errorlevel != 0 if no dd_rescue found" ! ./$tprog "$temp2" "$temp1"; then
	assert "no dd_rescue in path ('..not found ..')" ./$tprog "$temp2" "$temp1" "2>&1" \| "$grep" -i \"not found\"
	assert "no dd_rescue in path ('..dd_rescue..')" ./$tprog "$temp2" "$temp1" "2>&1" \| "$grep" -i "dd_rescue"
	assert "no dd_rescue in path ('..path..')" ./$tprog "$temp2" "$temp1" "2>&1" \| "$grep" -i "path"
fi


Elt Creating dummy dd_rescue in curdir
echo "#!/bin/bash "> $tempdir/dd_rescue &&
echo "echo dd_rescue Version 1.02" >> $tempdir/dd_rescue &&
chmod +x $tempdir/dd_rescue
Feedback

assert "dd_rescue in cur dir" ! ./$tprog "$temp2" "$temp1" \&\& ./$tprog "$temp2" "$temp1" "2>&1" \| "$grep" -i \"version\"
assert "dd_rescue in cur dir" ! ./$tprog "$temp2" "$temp1" \&\& ./$tprog "$temp2" "$temp1" "2>&1" \| "$grep" -i \"dd_rescue\"

Elt 'Creating dummy dd_rescue (v1.03)'
echo "#!/bin/bash "> $tempdir/dd_rescue &&
echo "echo dd_rescue Version 1.03" >> $tempdir/dd_rescue &&
chmod +x $tempdir/dd_rescue
Feedback


assert "dd_rescue in cur dir" ! ./$tprog "$temp2" "$temp1" \&\& ./$tprog "$temp2" "$temp1" "2>&1" \| "$grep" -i \"error.*summary\"

Elt 'Creating dummy dd_rescue (v1.11)'
echo "#!/bin/bash "> $tempdir/dd_rescue &&
echo "echo dd_rescue Version 1.11" >> $tempdir/dd_rescue &&
chmod +x $tempdir/dd_rescue
Feedback

assert "dd_rescue in cur dir" ! ./$tprog "$temp2" "$temp1" \&\& ./$tprog "$temp2" "$temp1" "2>&1" \| "$grep" -i \"error.*summary\"

Elt Deleting dummy dd_rescue
rm -f "$tempdir/dd_rescue"
Feedback


#Elt Tearing down
#PATH=$PATH_OLD && export PATH && 
#
#rm -f "$tempdir/dd_rescue" && rm -f "$tempdir/$tprog" && rmdir "$tempdir" && cd - 
#Feedback


#
# Running basic tests
#

Section Running Tests

assert "$tprog arg1 arg2 works fine with arg1 existing." ./$tprog "$temp2" "$temp1"
assert "contents should be equal" diff "$temp2" "$temp1"




Elt Tearing Down tests
rm -f "$temp1" "$temp2"
Feedback

echo "All tests have been conducted, and should inform you on the sanity
of this version of dd_rhelp"
echo "For a complete and simple test, try with a bad floppy, or CD-ROM."



